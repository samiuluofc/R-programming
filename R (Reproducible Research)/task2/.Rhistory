separate(data = res, col = sex_class, into = c("sex", "class"))
submit()
students3
submit()
?spread
submit()
submit()
extract_numeric("class5")
subit()
submit()
submit()
students4
submit()
submit()
submit()
submit()
passed
filed
failed
mutate(passed, status = "passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
bind_rows(passed,failed)
sat
?seperate
?separate
submit()
submit()
submit()
submit()
submit()
submit
submit()
q()
library(swirl)
swirl()
??
tbl_df
cran
q()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_ady)
wday(this_day)
wday(this_day, label = TRUE)
now()
thi_moment <- now()
this_moment <- now()
this_moment
hour(this_moment)
my_data <- ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
ymd(25081985)
dmy(25081985)
ymd("192012")
mdy(/"192012/")
mdy(/192012/)
mdy("/192012/")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update(this_moment, hours = 14, minutes = 41, seconds = 55)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
thi_moment
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008",tz = "Singapore")
last_time
?interval
how_long <- inerval(how_long)
how_long <- inerval(last_time,arrive)
how_long <- interval(last_time,arrive)
as.period(how_long)
stopwatch()
q()
setwd("G:/SAMIUL/BSc_MSc/Professional Development/Data_Science_Specialization/Course_5_Reproducible_Research/Week_4(Project)/project/code")
source('G:/SAMIUL/BSc_MSc/Professional Development/Data_Science_Specialization/Course_5_Reproducible_Research/Week_4(Project)/project/code/prog.R')
data_raw <- read.csv("FStormData.csv.bz2")
storm <- data_raw
## Data Processing Section
# Selecting only the important variables for the analysis
storm <- subset(storm, select=c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMGEXP", "PROPDMG", "CROPDMGEXP", "CROPDMG"))
# Check for NA values
sum(is.na(storm[,"FATALITIES"]))
sum(is.na(storm[,"INJURIES"]))
sum(is.na(storm[,"PROPDMGEXP"]))
sum(is.na(storm[,"PROPDMG"]))
sum(is.na(storm[,"CROPDMGEXP"]))
sum(is.na(storm[,"CROPDMG"]))
sum(is.na(storm[,"EVTYPE"]))
# Summary of variables (except "EVTYPE")
summary(storm$PROPDMGEXP)
summary(storm$CROPDMGEXP)
summary(storm$PROPDMG)
summary(storm$CROPDMG)
summary(storm$FATALITIES)
summary(storm$INJURIES)
# From the above summary, CROPDMGEXP and PROPDMGEXP contain the exponential term
# as factor variable. Preprocessing is needed to make them correct and consistent.
# Replacing factors with numbers
storm$PROPDMGEXP <- revalue(storm$PROPDMGEXP, c("M"="6", "m"="6", "K"="3", "k"="3", "B" = "9","b"="9"))
storm$PROPDMGEXP <- revalue(storm$PROPDMGEXP, c("-"="1", "+"="1", "?"="1", ""="1", "h"="2", "H"="2"))
library(ggplot2)
library(reshape)
library(plyr)
storm <- data_raw
## Data Processing Section
# Selecting only the important variables for the analysis
storm <- subset(storm, select=c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMGEXP", "PROPDMG", "CROPDMGEXP", "CROPDMG"))
# Check for NA values
sum(is.na(storm[,"FATALITIES"]))
sum(is.na(storm[,"INJURIES"]))
sum(is.na(storm[,"PROPDMGEXP"]))
sum(is.na(storm[,"PROPDMG"]))
sum(is.na(storm[,"CROPDMGEXP"]))
sum(is.na(storm[,"CROPDMG"]))
sum(is.na(storm[,"EVTYPE"]))
# Summary of variables (except "EVTYPE")
summary(storm$PROPDMGEXP)
summary(storm$CROPDMGEXP)
summary(storm$PROPDMG)
summary(storm$CROPDMG)
summary(storm$FATALITIES)
summary(storm$INJURIES)
# From the above summary, CROPDMGEXP and PROPDMGEXP contain the exponential term
# as factor variable. Preprocessing is needed to make them correct and consistent.
# Replacing factors with numbers
storm$PROPDMGEXP <- revalue(storm$PROPDMGEXP, c("M"="6", "m"="6", "K"="3", "k"="3", "B" = "9","b"="9"))
storm$PROPDMGEXP <- revalue(storm$PROPDMGEXP, c("-"="1", "+"="1", "?"="1", ""="1", "h"="2", "H"="2"))
storm <- data_raw
## Data Processing Section
# Selecting only the important variables for the analysis
storm <- subset(storm, select=c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMGEXP", "PROPDMG", "CROPDMGEXP", "CROPDMG"))
# Check for NA values
sum(is.na(storm[,"FATALITIES"]))
sum(is.na(storm[,"INJURIES"]))
sum(is.na(storm[,"PROPDMGEXP"]))
sum(is.na(storm[,"PROPDMG"]))
sum(is.na(storm[,"CROPDMGEXP"]))
sum(is.na(storm[,"CROPDMG"]))
sum(is.na(storm[,"EVTYPE"]))
# Summary of variables (except "EVTYPE")
summary(storm$PROPDMGEXP)
summary(storm$CROPDMGEXP)
summary(storm$PROPDMG)
summary(storm$CROPDMG)
summary(storm$FATALITIES)
summary(storm$INJURIES)
# From the above summary, CROPDMGEXP and PROPDMGEXP contain the exponential term
# as factor variable. Preprocessing is needed to make them correct and consistent.
# Replacing factors with numbers
storm$PROPDMGEXP <- revalue(storm$PROPDMGEXP, c("M"="6", "m"="6", "K"="3", "B" = "9"))
storm$PROPDMGEXP <- revalue(storm$PROPDMGEXP, c("-"="1", "+"="1", "?"="1", ""="1", "h"="2", "H"="2"))
storm <- data_raw
## Data Processing Section
# Selecting only the important variables for the analysis
storm <- subset(storm, select=c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMGEXP", "PROPDMG", "CROPDMGEXP", "CROPDMG"))
# Check for NA values
sum(is.na(storm[,"FATALITIES"]))
sum(is.na(storm[,"INJURIES"]))
sum(is.na(storm[,"PROPDMGEXP"]))
sum(is.na(storm[,"PROPDMG"]))
sum(is.na(storm[,"CROPDMGEXP"]))
sum(is.na(storm[,"CROPDMG"]))
sum(is.na(storm[,"EVTYPE"]))
# Summary of variables (except "EVTYPE")
summary(storm$PROPDMGEXP)
summary(storm$CROPDMGEXP)
summary(storm$PROPDMG)
summary(storm$CROPDMG)
summary(storm$FATALITIES)
summary(storm$INJURIES)
# From the above summary, CROPDMGEXP and PROPDMGEXP contain the exponential term
# as factor variable. Preprocessing is needed to make them correct and consistent.
# Replacing factors with numbers
storm$PROPDMGEXP <- revalue(storm$PROPDMGEXP, c("M"="6", "m"="6", "K"="3", "B" = "9","-"="1", "+"="1", "?"="1", ""="1", "h"="2", "H"="2"))
storm <- data_raw
## Data Processing Section
# Selecting only the important variables for the analysis
storm <- subset(storm, select=c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMGEXP", "PROPDMG", "CROPDMGEXP", "CROPDMG"))
# Check for NA values
sum(is.na(storm[,"FATALITIES"]))
sum(is.na(storm[,"INJURIES"]))
sum(is.na(storm[,"PROPDMGEXP"]))
sum(is.na(storm[,"PROPDMG"]))
sum(is.na(storm[,"CROPDMGEXP"]))
sum(is.na(storm[,"CROPDMG"]))
sum(is.na(storm[,"EVTYPE"]))
# Summary of variables (except "EVTYPE")
summary(storm$PROPDMGEXP)
summary(storm$CROPDMGEXP)
summary(storm$PROPDMG)
summary(storm$CROPDMG)
summary(storm$FATALITIES)
summary(storm$INJURIES)
# From the above summary, CROPDMGEXP and PROPDMGEXP contain the exponential term
# as factor variable. Preprocessing is needed to make them correct and consistent.
# Replacing factors with numbers
storm$PROPDMGEXP <- revalue(storm$PROPDMGEXP, c("M"="6", "m"="6", "K"="3", "B" = "9","-"="1", "+"="1", "?"="1", " "="1", "h"="2", "H"="2"))
storm <- data_raw
## Data Processing Section
# Selecting only the important variables for the analysis
storm <- subset(storm, select=c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMGEXP", "PROPDMG", "CROPDMGEXP", "CROPDMG"))
# Check for NA values
sum(is.na(storm[,"FATALITIES"]))
sum(is.na(storm[,"INJURIES"]))
sum(is.na(storm[,"PROPDMGEXP"]))
sum(is.na(storm[,"PROPDMG"]))
sum(is.na(storm[,"CROPDMGEXP"]))
sum(is.na(storm[,"CROPDMG"]))
sum(is.na(storm[,"EVTYPE"]))
# Summary of variables (except "EVTYPE")
summary(storm$PROPDMGEXP)
summary(storm$CROPDMGEXP)
summary(storm$PROPDMG)
summary(storm$CROPDMG)
summary(storm$FATALITIES)
summary(storm$INJURIES)
# From the above summary, CROPDMGEXP and PROPDMGEXP contain the exponential term
# as factor variable. Preprocessing is needed to make them correct and consistent.
# Replacing factors with numbers
storm$PROPDMGEXP <- revalue(storm$PROPDMGEXP, c("M"="6", "m"="6", "K"="3", "B" = "9", "+"="1", "?"="1", " "="1", "h"="2", "H"="2"))
storm$PROPDMGEXP <- mapvalues(storm$PROPDMGEXP, c("M"="6", "m"="6", "K"="3", "B" = "9", "+"="1", "?"="1", " "="1", "h"="2", "H"="2"))
storm$PROPDMGEXP <- revalues(storm$PROPDMGEXP, c("M"="6", "m"="6", "K"="3", "B" = "9", "+"="1", "?"="1", " "="1", "h"="2", "H"="2"))
storm$PROPDMGEXP <- revalue(storm$PROPDMGEXP, c("M"="6", "m"="6", "K"="3", "B" = "9", "+"="1", "?"="1", " "="1", "h"="2", "H"="2"))
storm <- data_raw
## Data Processing Section
# Selecting only the important variables for the analysis
storm <- subset(storm, select=c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMGEXP", "PROPDMG", "CROPDMGEXP", "CROPDMG"))
# Check for NA values
sum(is.na(storm[,"FATALITIES"]))
sum(is.na(storm[,"INJURIES"]))
sum(is.na(storm[,"PROPDMGEXP"]))
sum(is.na(storm[,"PROPDMG"]))
sum(is.na(storm[,"CROPDMGEXP"]))
sum(is.na(storm[,"CROPDMG"]))
sum(is.na(storm[,"EVTYPE"]))
# Summary of variables (except "EVTYPE")
summary(storm$PROPDMGEXP)
summary(storm$CROPDMGEXP)
summary(storm$PROPDMG)
summary(storm$CROPDMG)
summary(storm$FATALITIES)
summary(storm$INJURIES)
storm$PROPDMGEXP <- revalue(storm$PROPDMGEXP, c("M"="6", "m"="6", "K"="3", "B" = "9", "+"="1", "?"="1", "h"="2", "H"="2"))
summary(storm$PROPDMGEXP)
storm <- data_raw
## Data Processing Section
# Selecting only the important variables for the analysis
storm <- subset(storm, select=c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMGEXP", "PROPDMG", "CROPDMGEXP", "CROPDMG"))
# Check for NA values
sum(is.na(storm[,"FATALITIES"]))
sum(is.na(storm[,"INJURIES"]))
sum(is.na(storm[,"PROPDMGEXP"]))
sum(is.na(storm[,"PROPDMG"]))
sum(is.na(storm[,"CROPDMGEXP"]))
sum(is.na(storm[,"CROPDMG"]))
sum(is.na(storm[,"EVTYPE"]))
# Summary of variables (except "EVTYPE")
summary(storm$PROPDMGEXP)
summary(storm$CROPDMGEXP)
summary(storm$PROPDMG)
summary(storm$CROPDMG)
summary(storm$FATALITIES)
summary(storm$INJURIES)
# From the above summary, CROPDMGEXP and PROPDMGEXP contain the exponential term
# as factor variable. Preprocessing is needed to make them correct and consistent.
# Replacing factors with numbers
storm$PROPDMGEXP <- revalue(storm$PROPDMGEXP, c("M"="6", "m"="6", "K"="3", "B"="9", "+"="1", "?"="1", "h"="2", "H"="2", "-"="1"))
summary(storm$PROPDMGEXP)
storm$PROPDMGEXP <- sub("^$", "1", storm$PROPDMGEXP)
summary(storm$PROPDMGEXP)
storm <- data_raw
## Data Processing Section
# Selecting only the important variables for the analysis
storm <- subset(storm, select=c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMGEXP", "PROPDMG", "CROPDMGEXP", "CROPDMG"))
# Check for NA values
sum(is.na(storm[,"FATALITIES"]))
sum(is.na(storm[,"INJURIES"]))
sum(is.na(storm[,"PROPDMGEXP"]))
sum(is.na(storm[,"PROPDMG"]))
sum(is.na(storm[,"CROPDMGEXP"]))
sum(is.na(storm[,"CROPDMG"]))
sum(is.na(storm[,"EVTYPE"]))
# Summary of variables (except "EVTYPE")
summary(storm$PROPDMGEXP)
summary(storm$CROPDMGEXP)
summary(storm$PROPDMG)
summary(storm$CROPDMG)
summary(storm$FATALITIES)
summary(storm$INJURIES)
# From the above summary, CROPDMGEXP and PROPDMGEXP contain the exponential term
# as factor variable. Preprocessing is needed to make them correct and consistent.
# Replacing factors with numbers
storm$PROPDMGEXP <- revalue(storm$PROPDMGEXP, c("M"="6", "m"="6", "K"="3", "B"="9", "+"="1", "?"="1", "h"="2", "H"="2", "-"="1"))
storm$PROPDMG_COST <- storm$PROPDMG*10^as.numeric(storm$PROPDMGEXP)
View(data_raw)
View(data_raw)
storm$PROPDMG_COST <- storm$PROPDMG*(10^as.numeric(storm$PROPDMGEXP))
storm <- data_raw
## Data Processing Section
# Selecting only the important variables for the analysis
storm <- subset(storm, select=c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMGEXP", "PROPDMG", "CROPDMGEXP", "CROPDMG"))
# Check for NA values
sum(is.na(storm[,"FATALITIES"]))
sum(is.na(storm[,"INJURIES"]))
sum(is.na(storm[,"PROPDMGEXP"]))
sum(is.na(storm[,"PROPDMG"]))
sum(is.na(storm[,"CROPDMGEXP"]))
sum(is.na(storm[,"CROPDMG"]))
sum(is.na(storm[,"EVTYPE"]))
# Summary of variables (except "EVTYPE")
summary(storm$PROPDMGEXP)
summary(storm$CROPDMGEXP)
summary(storm$PROPDMG)
summary(storm$CROPDMG)
summary(storm$FATALITIES)
summary(storm$INJURIES)
# From the above summary, CROPDMGEXP and PROPDMGEXP contain the exponential term
# as factor variable. Preprocessing is needed to make them correct and consistent.
# Replacing factors with numbers
storm$PROPDMGEXP <- revalue(storm$PROPDMGEXP, c("M"="6", "m"="6", "K"="3", "B"="9", "+"="1", "?"="1", "h"="2", "H"="2", "-"="1"))
PROPDMG_COST <- storm$PROPDMG*(10^as.numeric(storm$PROPDMGEXP))
storm$CROPDMGEXP <- revalue(storm$CROPDMGEXP, c("M"="6", "m"="6", "K"="3", "B"="9", "k"="3", "?"="1"))
CROPDMG_COST <- storm$CROPDMG*(10^as.numeric(storm$CROPDMGEXP))
storm$DMG_COST <- PROPDMG_COST + CROPDMG_COST
# Copying the raw data into another object
storm <- data_raw
# Selecting only the important variables for the analysis
storm <- subset(storm, select=c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMGEXP", "PROPDMG", "CROPDMGEXP", "CROPDMG"))
# Check for NA values
sum(is.na(storm[,"FATALITIES"]))
sum(is.na(storm[,"INJURIES"]))
sum(is.na(storm[,"PROPDMGEXP"]))
sum(is.na(storm[,"PROPDMG"]))
sum(is.na(storm[,"CROPDMGEXP"]))
sum(is.na(storm[,"CROPDMG"]))
sum(is.na(storm[,"EVTYPE"]))
# Summary of variables (except "EVTYPE")
summary(storm$PROPDMGEXP)
summary(storm$CROPDMGEXP)
summary(storm$PROPDMG)
summary(storm$CROPDMG)
summary(storm$FATALITIES)
summary(storm$INJURIES)
# From the above summary, CROPDMGEXP and PROPDMGEXP contain the exponential term
# as factor variable. Preprocessing is needed to make them correct and consistent.
# Replacing factors with numbers
storm$PROPDMGEXP <- revalue(storm$PROPDMGEXP, c("M"="6", "m"="6", "K"="3", "B"="9", "+"="1", "?"="1", "h"="2", "H"="2", "-"="1"))
PROPDMG_COST <- storm$PROPDMG*(10^as.numeric(storm$PROPDMGEXP))
storm$CROPDMGEXP <- revalue(storm$CROPDMGEXP, c("M"="6", "m"="6", "K"="3", "B"="9", "k"="3", "?"="1"))
CROPDMG_COST <- storm$CROPDMG*(10^as.numeric(storm$CROPDMGEXP))
storm$DMG_COST <- PROPDMG_COST + CROPDMG_COST
# Total affected lifes
storm$LIFE_COST = storm$FATALITIES + storm$INJURIES
## Result Section
# Question 1:
# Across the United States, which types of events (as indicated in the EVTYPE variable) are most harmful with respect to population health?
storm_temp <- subset(storm, select=c("EVTYPE", "LIFE_COST"))
View(storm_temp)
View(storm_temp)
# Copying the raw data into another object
storm <- data_raw
# Selecting only the important variables for the analysis
storm <- subset(storm, select=c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMGEXP", "PROPDMG", "CROPDMGEXP", "CROPDMG"))
# Check for NA values
sum(is.na(storm[,"FATALITIES"]))
sum(is.na(storm[,"INJURIES"]))
sum(is.na(storm[,"PROPDMGEXP"]))
sum(is.na(storm[,"PROPDMG"]))
sum(is.na(storm[,"CROPDMGEXP"]))
sum(is.na(storm[,"CROPDMG"]))
sum(is.na(storm[,"EVTYPE"]))
# Summary of variables (except "EVTYPE")
summary(storm$PROPDMGEXP)
summary(storm$CROPDMGEXP)
summary(storm$PROPDMG)
summary(storm$CROPDMG)
summary(storm$FATALITIES)
summary(storm$INJURIES)
# From the above summary, CROPDMGEXP and PROPDMGEXP contain the exponential term
# as factor variable. Preprocessing is needed to make them correct and consistent.
# Replacing factors with numbers
storm$PROPDMGEXP <- revalue(storm$PROPDMGEXP, c("M"="6", "m"="6", "K"="3", "B"="9", "+"="1", "?"="1", "h"="2", "H"="2", "-"="1"))
PROPDMG_COST <- storm$PROPDMG*(10^as.numeric(storm$PROPDMGEXP))
storm$CROPDMGEXP <- revalue(storm$CROPDMGEXP, c("M"="6", "m"="6", "K"="3", "B"="9", "k"="3", "?"="1"))
CROPDMG_COST <- storm$CROPDMG*(10^as.numeric(storm$CROPDMGEXP))
storm$DMG_COST <- PROPDMG_COST + CROPDMG_COST
# Total affected lifes
storm$LIFE_COST = storm$FATALITIES + storm$INJURIES
## Result Section
# Question 1:
# Across the United States, which types of events (as indicated in the EVTYPE variable) are most harmful with respect to population health?
storm_temp1 <- subset(storm, select=c("EVTYPE", "LIFE_COST"))
plot_data_1 <- aggregate(data = storm_temp1, LIFE_COST ~ EVTYPE, FUN = sum)
View(plot_data_1)
View(plot_data_1)
plot_data_1 <- plot_data_1[order(plot_data_1$LIFE_COST, decreasing = TRUE),]
View(plot_data_1)
View(plot_data_1)
g <- ggplot(plot_data, aes(EVTYPE, LIFE_COST))
plot_data <- plot_data_1[1:20,]
g <- ggplot(plot_data, aes(EVTYPE, LIFE_COST))
print(g)
g <- ggplot(plot_data, aes(factro(EVTYPE)))
print(g)
g <- ggplot(plot_data, aes(factor(EVTYPE)))
print(g)
g <- ggplot(plot_data, aes(EVTYPE, LIFE_COST))
g <- g + geom_bar(stat='identity')
g <- g + xlab("Disaster Event Type") + ylab("Number of Fatalities and Injuries") + ggtitle( "Top 20 harmful disasters")
print(g)
View(plot_data)
View(plot_data)
# Bar ploting
g <- ggplot(plot_data, aes(EVTYPE, LIFE_COST))
g <- g + geom_bar(stat='identity')
g <- g + xlab("Disaster Event Type") + ylab("Number of Fatalities and Injuries") + ggtitle( "Top 20 harmful disasters(1950 to November 2011)")
g <- g + theme(axis.text.x=element_text(angle = 90, hjust = 1))
print(g)
storm_temp2 <- subset(storm, select=c("EVTYPE", "DMG_COST"))
# Aggregate LIFE_COST for each type of disaster event (across the US)
plot_data_2 <- aggregate(data = storm_temp2, DMG_COST ~ EVTYPE, FUN = sum)
# Sort the (in descending order) table according to LIFE_COST
plot_data_2 <- plot_data_2[order(plot_data_2$DMG_COST, decreasing = TRUE),]
# Select top 20
plot_data <- plot_data_2[1:20,]
# Bar ploting
g <- ggplot(plot_data, aes(EVTYPE, DMG_COST))
g <- g + geom_bar(stat='identity')
g <- g + xlab("Disaster Event Type") + ylab("Amount of Damage (in $)") + ggtitle( "Top 20 economically harmful disasters(1950 to November 2011)")
g <- g + theme(axis.text.x=element_text(angle = 90, hjust = 1))
print(g)
# Question 2:
# Across the United States, which types of events have the greatest economic consequences?
# Select only the variables "EVTYPE" and "LIFE_COST"
storm_temp2 <- subset(storm, select=c("EVTYPE", "DMG_COST"))
# Aggregate LIFE_COST for each type of disaster event (across the US)
plot_data_2 <- aggregate(data = storm_temp2, DMG_COST ~ EVTYPE, FUN = sum)
# Sort the (in descending order) table according to LIFE_COST
plot_data_2 <- plot_data_2[order(plot_data_2$DMG_COST, decreasing = TRUE),]
# Select top 20
plot_data <- plot_data_2[1:20,]
plot_data$DMG_COST <- plot_data$DMG_COST/1000000
# Bar ploting
g <- ggplot(plot_data, aes(EVTYPE, DMG_COST))
g <- g + geom_bar(stat='identity')
g <- g + xlab("Disaster Event Type") + ylab("Amount of Damage (in $)") + ggtitle( "Top 20 economically harmful disasters(1950 to November 2011)")
g <- g + theme(axis.text.x=element_text(angle = 90, hjust = 1))
print(g)
# Question 2:
# Across the United States, which types of events have the greatest economic consequences?
# Select only the variables "EVTYPE" and "LIFE_COST"
storm_temp2 <- subset(storm, select=c("EVTYPE", "DMG_COST"))
# Aggregate LIFE_COST for each type of disaster event (across the US)
plot_data_2 <- aggregate(data = storm_temp2, DMG_COST ~ EVTYPE, FUN = sum)
# Sort the (in descending order) table according to LIFE_COST
plot_data_2 <- plot_data_2[order(plot_data_2$DMG_COST, decreasing = TRUE),]
# Select top 20
plot_data <- plot_data_2[1:20,]
plot_data$DMG_COST <- plot_data$DMG_COST/1000000000
# Bar ploting
g <- ggplot(plot_data, aes(EVTYPE, DMG_COST))
g <- g + geom_bar(stat='identity')
g <- g + xlab("Disaster Event Type") + ylab("Amount of Damage (in $)") + ggtitle( "Top 20 economically harmful disasters(1950 to November 2011)")
g <- g + theme(axis.text.x=element_text(angle = 90, hjust = 1))
print(g)
# Question 2:
# Across the United States, which types of events have the greatest economic consequences?
# Select only the variables "EVTYPE" and "LIFE_COST"
storm_temp2 <- subset(storm, select=c("EVTYPE", "DMG_COST"))
# Aggregate LIFE_COST for each type of disaster event (across the US)
plot_data_2 <- aggregate(data = storm_temp2, DMG_COST ~ EVTYPE, FUN = sum)
# Sort the (in descending order) table according to LIFE_COST
plot_data_2 <- plot_data_2[order(plot_data_2$DMG_COST, decreasing = TRUE),]
# Select top 20
plot_data <- plot_data_2[1:20,]
# Convert the amount into Billion $
plot_data$DMG_COST <- plot_data$DMG_COST/1000000000
# Bar ploting
g <- ggplot(plot_data, aes(x = EVTYPE, y = DMG_COST))
g <- g + geom_bar(stat='identity')
g <- g + xlab("Disaster Event Type") + ylab("Amount of Damage in Billion $") + ggtitle( "Top 20 economically harmful disasters(1950 to November 2011)")
g <- g + theme(axis.text.x=element_text(angle = 90, hjust = 1))
print(g)
?ggplot
